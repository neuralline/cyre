name: Cyre CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Test on Node.js ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18, 20]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Setup PNPM with explicit version
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false # Don't run install yet
      
      # Setup Node.js with correct caching
      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm' # This tells setup-node to use pnpm for caching
      
      # Now run the install with proper error handling
      - name: Install dependencies
        run: |
          # Make sure pnpm-lock.yaml exists before CI runs
          if [ ! -f "pnpm-lock.yaml" ]; then
            echo "Creating pnpm-lock.yaml"
            pnpm install --lockfile-only
          fi
          
          # Install dependencies, including coverage tool
          pnpm install
          pnpm add -D @vitest/coverage-istanbul
      
      # Set NODE_OPTIONS for node.js crypto
      - name: Set Node Options
        run: |
          echo "NODE_OPTIONS=--experimental-global-webcrypto" >> $GITHUB_ENV
      
      - name: Run tests
        run: pnpm test
      
      - name: Run lint
        run: pnpm lint || echo "Linting skipped"

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Setup PNPM with explicit version
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      # Setup Node.js with correct caching
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      
      # Now run the install with proper error handling
      - name: Install dependencies
        run: |
          # Make sure pnpm-lock.yaml exists
          if [ ! -f "pnpm-lock.yaml" ]; then
            echo "Creating pnpm-lock.yaml"
            pnpm install --lockfile-only
          fi
          
          pnpm install
      
      - name: Build package
        run: pnpm build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
          retention-days: 7